#!/usr/bin/env bash
HOSTS_FILE="/etc/hosts"
BACKUP_FILE="/etc/hosts.bkp"

# Function to resolve symbolic links and get the actual file path
resolve_symlink() {
    local file="$1"
    if [[ -L "$file" ]]; then
        # If it's a symbolic link, resolve it to the actual file
        readlink -f "$file"
    else
        # If it's not a symbolic link, return the original path
        echo "$file"
    fi
}

generate_entries() {
    # Resolve the actual paths for both hosts file and backup file
    local actual_hosts_file=$(resolve_symlink "$HOSTS_FILE")
    local actual_backup_file=$(resolve_symlink "$BACKUP_FILE")
    
    # Create backup if it doesn't exist
    if [[ ! -f "$actual_backup_file" ]]; then
        cp "$actual_hosts_file" "$actual_backup_file"
    fi
    
    # Restore backup and add header to the actual file
    {
        echo "# Auto-generated by docker-sync"
        cat "$actual_backup_file"
    } > "$actual_hosts_file"
    
    # Add Docker container entries
    for cid in $(docker ps -q); do
        name=$(docker inspect -f '{{.Name}}' "$cid" | sed 's|/||')
        ip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$cid")
        # Only add entry if both name and ip are not empty and name is not just the container ID
        if [[ -n "$ip" && -n "$name" && "$name" != "$cid" ]]; then
            echo "$ip $name" >> "$actual_hosts_file"
        fi
    done
}

# Initial generation
generate_entries

# Watch docker events to keep it in syncs
docker events --filter 'event=start' --filter 'event=stop' --filter 'event=die' | while read -r _; do
    generate_entries
done

